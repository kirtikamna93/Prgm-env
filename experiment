Experiment 1- Removed return(0); line
outcome: the program worked fine and produced the output. Google search for return(0) said "the main function is of type int and 
therefore should return an integer value.The return value of the main function is considered the "Exit Status" of the application. On
most operating systems returning 0 is a success status like saying " The program worked fine".
Question: Why did the program run whithout any return value?

Experiment 2- Removed #
outcome: when we did precompilation with # the number of lines (using the command gcc file.c|wc -l) was 852. After removing the # the 
number of lines was 12. By google search we got to know that The preprocessor actually copies the entire header into your source file.
Thus we got to know about the importance of # by this experiment.

Experiment 3-using the command gcc -E filename.c > filename.i 
outcome:By using the command gcc -E filename.c > filename.i we got the file 
containing the preprocessed output.

Experiment 4 - using command gcc -C filename.c
outcome: we got a file with .o extension.
when we tried to open it it was not opening since it is in machine language (0s and 1s).
From the article we got to know that The command above would produce a file main.o that would contain machine level code or compiled code.
Question : in the first article its telling compilation will produce the .o file but in the second article its written compilation will produce
.s file.

Experiment 5 - using the command gcc -S filename.c > filename.s
outcome : it produced a file with .s extension. This command converted the high level language (C language in our case) to assembly level
language. We were able to open that file.

Experiment 6 - using the command gcc -S filename.c > differentfilename.s
outcome : through this experiment I got to know that I can give any name that i want for the .s file.


